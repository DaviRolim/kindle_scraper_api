{
  "service": {
    "service": "docker-selenium-lambda",
    "serviceObject": {
      "name": "docker-selenium-lambda"
    },
    "provider": {
      "name": "aws",
      "stage": "prod",
      "region": "us-east-1",
      "ecr": {
        "images": {
          "scraper-img": {
            "path": "./scraper/",
            "file": "Dockerfile",
            "platform": "linux/amd64"
          },
          "firestore-img": {
            "path": "./firebase_repo/",
            "file": "Dockerfile",
            "platform": "linux/amd64"
          }
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction",
            "lambda:InvokeAsync"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ScraperLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/scraper"
            }
          },
          "FirestoreDashdbLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/firestore-db"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "docker-selenium-lambda",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/scraper:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firestore-db:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/scraper:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/firestore-db:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "docker-selenium-lambda",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "FirestoreDashdbLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "877570356257.dkr.ecr.us-east-1.amazonaws.com/serverless-docker-selenium-lambda-prod@sha256:eb378bb354e11de1fc92641658cd4d6a698562307142a1042af9070fc893e034"
              },
              "PackageType": "Image",
              "FunctionName": "firestore-db",
              "MemorySize": 512,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FirestoreDashdbLogGroup"
            ]
          },
          "FirestoreDashdbLambdaVersionEMsl9lF59yPrNQQbSDdS4T7kPWZrkR9cezNRXB6tsME": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FirestoreDashdbLambdaFunction"
              },
              "CodeSha256": "eb378bb354e11de1fc92641658cd4d6a698562307142a1042af9070fc893e034"
            }
          },
          "ScraperLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "877570356257.dkr.ecr.us-east-1.amazonaws.com/serverless-docker-selenium-lambda-prod@sha256:d4aac6145fb00021497fe2e9d2480fdbb43b89f3b20d519700cdc556669e9af0"
              },
              "PackageType": "Image",
              "FunctionName": "scraper",
              "MemorySize": 1024,
              "Timeout": 600,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ScraperLogGroup"
            ]
          },
          "ScraperLambdaVersionH8axyf7i3R9un6hCY6w0vhepcTGFIs0F2ECukXsGzho": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ScraperLambdaFunction"
              },
              "CodeSha256": "d4aac6145fb00021497fe2e9d2480fdbb43b89f3b20d519700cdc556669e9af0"
            }
          },
          "ScraperLambdaFunctionUrl": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
              "AuthType": "NONE",
              "TargetFunctionArn": {
                "Fn::GetAtt": [
                  "ScraperLambdaFunction",
                  "Arn"
                ]
              },
              "Cors": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token"
                ],
                "AllowMethods": [
                  "*"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "ScraperLambdaPermissionFnUrl": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ScraperLambdaFunctionUrl\"][\"Properties\"][\"TargetFunctionArn\"]"
              },
              "Action": "lambda:InvokeFunctionUrl",
              "Principal": "*",
              "FunctionUrlAuthType": "NONE"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-ServerlessDeploymentBucketName"
            }
          },
          "FirestoreDashdbLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FirestoreDashdbLambdaVersionEMsl9lF59yPrNQQbSDdS4T7kPWZrkR9cezNRXB6tsME"
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-FirestoreDashdbLambdaFunctionQualifiedArn"
            }
          },
          "ScraperLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ScraperLambdaVersionH8axyf7i3R9un6hCY6w0vhepcTGFIs0F2ECukXsGzho"
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-ScraperLambdaFunctionQualifiedArn"
            }
          },
          "ScraperLambdaFunctionUrl": {
            "Description": "Lambda Function URL",
            "Value": {
              "Fn::GetAtt": [
                "ScraperLambdaFunctionUrl",
                "FunctionUrl"
              ]
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-ScraperLambdaFunctionUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "scraper": {
        "url": {
          "cors": true
        },
        "package": {
          "exclude": [
            "./**"
          ]
        },
        "timeout": 600,
        "memorySize": 1024,
        "image": {
          "name": "scraper-img"
        },
        "name": "scraper",
        "events": [],
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "ScraperLambdaVersionH8axyf7i3R9un6hCY6w0vhepcTGFIs0F2ECukXsGzho"
      },
      "firestore-db": {
        "package": {
          "exclude": [
            "./**"
          ]
        },
        "timeout": 30,
        "memorySize": 512,
        "image": {
          "name": "firestore-img"
        },
        "name": "firestore-db",
        "events": [],
        "memory": 512,
        "vpc": {},
        "versionLogicalId": "FirestoreDashdbLambdaVersionEMsl9lF59yPrNQQbSDdS4T7kPWZrkR9cezNRXB6tsME"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "docker-selenium-lambda",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/docker-selenium-lambda/prod/code-artifacts",
        "artifactDirectoryName": "serverless/docker-selenium-lambda/prod/1651930148758-2022-05-07T13:29:08.758Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/docker-selenium-lambda/prod/1651930148758-2022-05-07T13:29:08.758Z",
    "artifact": ""
  }
}