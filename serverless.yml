service: docker-selenium-lambda

provider:
  name: aws
  stage: ${opt:stage, 'prod'}
  region: ${env:AWS_REGION, 'us-east-1'}
  ecr:
    images:
      update-daily-highlight-img:
        path: ./update_highlights_for_users/
        file: Dockerfile
        platform: linux/amd64
      scraper-img:
        path: ./scraper/
        file: Dockerfile
        platform: linux/amd64
      firestore-img:
        path: ./firebase_repo/
        file: Dockerfile
        platform: linux/amd64
      daily-highlights-img:
        path: ./daily_highlights/
        file: Dockerfile
        platform: linux/amd64
      user-streak-img:
        path: ./user_streak/
        file: Dockerfile
        platform: linux/amd64
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "lambda:InvokeAsync"
      Resource: "*"

package:
  individually: true

functions:
  scraper:
    url:
      cors: true
    package:
      exclude:
        - ./**
    timeout: 600
    memorySize: 1024
    image:
      name: scraper-img
    name: scraper

  update-daily-highlight:
    events:
      - schedule: cron(0 12 * * ? *)
    package:
      exclude:
        - ./**
    timeout: 30
    memorySize: 512
    image:
      name: update-daily-highlight-img
    name: update-daily-highlight

  dailyhighlights:
    url:
      cors: true
    package:
      exclude:
        - ./**
    timeout: 30
    memorySize: 512
    image:
      name: daily-highlights-img
    name: dailyhighlights

  userstreak:
    url:
      cors: true
    package:
      exclude:
        - ./**
    timeout: 30
    memorySize: 512
    image:
      name: user-streak-img
    name: user-streak

  firestore-db:
    package:
        exclude:
          - ./**
    timeout: 30
    memorySize: 512
    image:
      name: firestore-img
    name: firestore-db

plugins:
  - serverless-python-requirements
